name: Create Release Github

on:
  push:
    branches:
      - main
    paths:
      - CHANGELOG.md
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v2
        id: github_app_token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from CHANGELOG.md
        id: extract_version
        run: |
          # Extract version from CHANGELOG.md
          VERSION=$(grep -oE '^## \[v?[0-9]+\.[0-9]+\.[0-9]+\]' CHANGELOG.md | head -1 | sed 's/^## \[//;s/]$//')

          if [ -z "$VERSION" ]; then
            echo "No version found in CHANGELOG.md"
            echo "Please add a version entry in CHANGELOG.md format: ## [0.1.0]()"
            exit 1
          fi

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION from CHANGELOG.md"

      - name: Check if version already exists
        id: check_version
        run: |
          VERSION="${{ steps.extract_version.outputs.version }}"

          # Check if tag already exists
          if git rev-parse "$VERSION" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Version $VERSION already exists, skipping release"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Version $VERSION is new, proceeding with release"
          fi

      - name: Extract Changelog
        id: changelog
        if: steps.check_version.outputs.exists == 'false'
        uses: nickohold/changelog-version-extractor@v1.0.0
        with:
          version_prefix: '## ['
          version: ${{ steps.extract_version.outputs.version }}
          changelog_path: './CHANGELOG.md'

      - name: Create GitHub Release
        if: steps.check_version.outputs.exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ steps.github_app_token.outputs.token }}
        with:
          tag_name: ${{ steps.extract_version.outputs.version }}
          release_name: Release ${{ steps.extract_version.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Send release notification
        if: steps.check_version.outputs.exists == 'false'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            üöÄ New Release: ${{ steps.extract_version.outputs.version }}

            üìù Version: ${{ steps.extract_version.outputs.version }}
            üîó Release: https://github.com/${{ github.repository }}/releases/tag/${{ steps.extract_version.outputs.version }}

            üìã Changes:
            ${{ steps.changelog.outputs.changelog }}

      - name: Skip release notification
        if: steps.check_version.outputs.exists == 'true'
        run: |
          echo "Version ${{ steps.extract_version.outputs.version }} already exists, skipping release creation"
