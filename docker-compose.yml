services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: codevn-app
    env_file: .env
    ports:
      - '3000:3000'
    volumes:
      - ./public/uploads:/app/public/uploads
    depends_on:
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_started
    restart: unless-stopped

  postgres:
    image: postgres:17
    container_name: codevn-postgres
    env_file: .env
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    command: >
      postgres
      -c max_connections=100
      -c shared_buffers=1536MB
      -c effective_cache_size=4GB
      -c maintenance_work_mem=128MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $POSTGRES_USER -d $POSTGRES_DB']
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    build:
      context: .
      dockerfile: Dockerfile
      target: migrator
    container_name: codevn-migrate
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    restart: 'no'

  redis:
    image: redis:8-alpine
    container_name: codevn-redis
    env_file: .env
    ports:
      - '6379:6379'
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - redis_data:/data
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:9
    container_name: codevn-pgadmin
    env_file: .env
    ports:
      - '8080:80'
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  nginx:
    image: nginx:1.29-alpine
    container_name: codevn-nginx
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./public:/app/public:ro
    depends_on:
      - app
    restart: unless-stopped

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:
